def book_list_view(library):
    if not library:
        print('В библиотеке нет книг')
    else:
        available_books = [title for title, info in library.items() if info['available']]
        unavailable_books = [title for title, info in library.items() if not info['available']]
        print('Список книг в наличии:')
        for title in available_books:
            author = library[title]['author']
            print(f'- {title}, {author}')
        print('Список отсутствующих книг:')
        for title in unavailable_books:
            author = library[title]['author']
            print(f'- {title}, {author}')


def create_book(author, year):
    return {
        'author': author,
        'year': year,
        'available': True
    }
    
    
def add_book(title, author, year):
    if title in library:
        response = input(str(f'Книга "{title}" уже есть в библиотеке. Хотите обновить информацию о ней? Да/нет: '))
        if response.lower() == "да":
            library[title] = create_book(author, year)
            print(f'Книга "{title}" была успешно обновлена!')
        else:
            print(f'Изменений не произошло.')
    else:
        library[title] = create_book(author, year)
        print(f'Книга "{title}" была успешно добавлена в библиотеку!')


def remove_book(title):
    try:
        del library[title]
    except KeyError:
        print('Книга не найдена')
    else:
        print(f'Книга "{title}" была удалена')


def issue_book(title):
    if title in library:
        book = library[title]
        if book['available']:
            book['available'] = False
            print(f'Книга "{title}" успешно выдана!')
        else:
            print('Книга отсуттсвует.')
    else:
        print('Книга не найдена в библиотеке.')


def return_book(title):
    if title in library:
        book = library[title]
        if not book['available']:
            book['available'] = True
            print(f'Книга "{title}" возвращена!')
        else:
            print('Книга уже была возвращена.')
    else:
        print('Книга не найдена в библиотеке.')


def find_book(title):
    if title in library:
        info = library[title]
        status = ''
        if info['available']:
            status = 'Доступна'
        else:
            status = 'Недоступна'
        print(f'Название книги: {title}\nАвтор:{info["author"]}\nГод выпуска: {info["year"]}\nСтатус: {status}')
    else:
        print('Книга не найдена в библиотеке.')


library = {
    'Евгений Онегин': {'author': 'А.С.Пушкин', 'year': '1833', 'available': True},
    'Война и мир': {'author': 'Л.Н.Толстой', 'year': '1867', 'available': True},
    'Ася': {'author': 'И.С.Тургенев', 'year': '1858', 'available': False}
}
while True:
    print('''Выберите пункт в меню:
1.Просмотр библиотеки
2.Добавить книгу
3.Удалить книгу
4.Выдать книгу
5.Вернуть книгу
6.Найти информацию о книге
7.Выход\n
''')
    menu = input('Напишите число соответсвующее подходящему Вам варианту: ')
    while menu > '7':
        menu = input('Ошибка! Введите число соответсвующее представленным в меню вариантам: ')
    while menu < '1':
        menu = input('Ошибка! Введите число соответсвующее представленным в меню вариантам: ')
    if menu == '1':
        book_list_view(library)
    elif menu == '2':
        title = input(str('\nВведите название книги: '))
        author = input(str('\nВведите автора книги: '))
        year = input(str('\nВведите год выпуска книги: '))
        add_book(title, author, year)
    elif menu == '3':
        title = input(str('\nВведите название книги: '))
        author = input(str('\nВведите автора книги: '))
        remove_book(title)
    elif menu == '4':
        title = input(str('\nВведите название книги: '))
        author = input(str('\nВведите автора книги: '))
        issue_book(title)
    elif menu == '5':
        title = input(str('\nВведите название книги: '))
        author = input(str('\nВведите автора книги: '))
        return_book(title)
    elif menu == '6':
        title = input(str('\nВведите название книги: '))
        author = input(str('\nВведите автора книги: '))
        find_book(title)
    else:
        print('\nМеню закрыто.')
        break


